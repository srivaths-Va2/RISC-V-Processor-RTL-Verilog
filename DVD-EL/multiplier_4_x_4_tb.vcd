$date
	Tue Mar 05 22:04:08 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module multiplier_4_x_4_tb $end
$var wire 8 ! product [7:0] $end
$var reg 4 " inp1 [3:0] $end
$var reg 4 # inp2 [3:0] $end
$scope module uut $end
$var wire 4 $ inp1 [3:0] $end
$var wire 4 % inp2 [3:0] $end
$var wire 1 & x9 $end
$var wire 1 ' x8 $end
$var wire 1 ( x7 $end
$var wire 1 ) x6 $end
$var wire 1 * x5 $end
$var wire 1 + x4 $end
$var wire 1 , x3 $end
$var wire 1 - x2 $end
$var wire 1 . x17 $end
$var wire 1 / x16 $end
$var wire 1 0 x15 $end
$var wire 1 1 x14 $end
$var wire 1 2 x13 $end
$var wire 1 3 x12 $end
$var wire 1 4 x11 $end
$var wire 1 5 x10 $end
$var wire 1 6 x1 $end
$var wire 8 7 product [7:0] $end
$scope module FA1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 , cout $end
$var wire 1 - sout $end
$var wire 1 6 cin $end
$upscope $end
$scope module FA2 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 , cin $end
$var wire 1 * cout $end
$var wire 1 + sout $end
$upscope $end
$scope module FA3 $end
$var wire 1 < b $end
$var wire 1 ' cout $end
$var wire 1 & sout $end
$var wire 1 . cin $end
$var wire 1 ( a $end
$upscope $end
$scope module FA4 $end
$var wire 1 = b $end
$var wire 1 . cout $end
$var wire 1 2 sout $end
$var wire 1 / cin $end
$var wire 1 ) a $end
$upscope $end
$scope module FA5 $end
$var wire 1 + a $end
$var wire 1 > b $end
$var wire 1 / cout $end
$var wire 1 1 sout $end
$var wire 1 0 cin $end
$upscope $end
$scope module FA6 $end
$var wire 1 ' a $end
$var wire 1 ? b $end
$var wire 1 @ cout $end
$var wire 1 A sout $end
$var wire 1 5 cin $end
$upscope $end
$scope module FA7 $end
$var wire 1 & a $end
$var wire 1 B b $end
$var wire 1 5 cout $end
$var wire 1 C sout $end
$var wire 1 4 cin $end
$upscope $end
$scope module FA8 $end
$var wire 1 2 a $end
$var wire 1 D b $end
$var wire 1 4 cout $end
$var wire 1 E sout $end
$var wire 1 3 cin $end
$upscope $end
$scope module HA1 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 6 cout $end
$var wire 1 H sout $end
$upscope $end
$scope module HA2 $end
$var wire 1 I a $end
$var wire 1 * b $end
$var wire 1 ( cout $end
$var wire 1 ) sout $end
$upscope $end
$scope module HA3 $end
$var wire 1 - a $end
$var wire 1 J b $end
$var wire 1 0 cout $end
$var wire 1 K sout $end
$upscope $end
$scope module HA4 $end
$var wire 1 1 a $end
$var wire 1 L b $end
$var wire 1 3 cout $end
$var wire 1 M sout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1M
0L
0K
0J
1I
0H
0G
0F
1E
0D
1C
1B
1A
0@
1?
0>
0=
0<
0;
1:
09
08
b1111000 7
06
05
04
03
12
11
00
0/
0.
0-
0,
1+
0*
1)
0(
0'
0&
b1100 %
b1010 $
b1100 #
b1010 "
b1111000 !
$end
#30
1@
0'
0A
15
1E
0C
b10011100 !
b10011100 7
1K
0.
1-
12
1&
0)
19
0:
1;
0I
1=
1<
b1101 "
b1101 $
#60
1C
05
04
0@
1E
b111100 !
b111100 7
0A
02
0&
1D
0?
18
09
1:
0;
0=
0<
b110 #
b110 %
b1010 "
b1010 $
#90
1A
15
0C
14
0E
12
0M
01
1)
1*
0+
0K
1,
0-
b1000010 !
b1000010 7
1H
1G
19
b1011 "
b1011 $
#120
1E
15
0'
0/
14
1C
1@
0,
0)
13
0.
0A
0+
0*
11
12
1&
0M
0H
b10110100 !
b10110100 7
1K
1L
1?
0G
08
09
0:
1J
1>
1=
1<
b1111 #
b1111 %
b1100 "
b1100 $
#150
